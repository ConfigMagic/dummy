syntax = "proto3";

package env;
option go_package = "github.com/ConfigMagic/dummy/server/pb/pb;pb";

import "google/api/annotations.proto";

// Main entity: environment configuration
message EnvConfig {
  string name = 1;                     // Unique name of the environment
  string description = 2;              // Description
  map<string, string> variables = 3;   // Environment variables
  repeated string services = 4;        // Names of services (e.g., postgres, redis, app)
  string raw_compose = 5;              // Docker-compose text (optional)
}

// Request by environment name
message EnvRequest {
  string name = 1;
}

// List of all environments
message EnvList {
  repeated EnvConfig configs = 1;
}

// Empty request
message Empty {}

service EnvService {
  rpc GetEnvConfig(EnvRequest) returns (EnvConfig) {
    option (google.api.http) = {
      get: "/v1/envs/{name}"
    };
  }

  rpc ListEnvConfigs(Empty) returns (EnvList) {
    option (google.api.http) = {
      get: "/v1/envs"
    };
  }

  rpc ApplyEnvConfig(EnvConfig) returns (EnvConfig) {
    option (google.api.http) = {
      post: "/v1/envs"
      body: "*"
    };
  }

  rpc DeleteEnvConfig(EnvRequest) returns (Empty) {
    option (google.api.http) = {
      delete: "/v1/envs/{name}"
    };
  }
}