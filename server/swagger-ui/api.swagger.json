{
  "swagger": "2.0",
  "info": {
    "title": "env.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EnvService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/envs": {
      "get": {
        "operationId": "EnvService_ListEnvConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/envEnvList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EnvService"
        ]
      },
      "post": {
        "operationId": "EnvService_ApplyEnvConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/envEnvConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/envEnvConfig"
            }
          }
        ],
        "tags": [
          "EnvService"
        ]
      }
    },
    "/v1/envs/{name}": {
      "get": {
        "operationId": "EnvService_GetEnvConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/envEnvConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvService"
        ]
      },
      "delete": {
        "operationId": "EnvService_DeleteEnvConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/envEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EnvService"
        ]
      }
    }
  },
  "definitions": {
    "envEmpty": {
      "type": "object",
      "title": "Empty request"
    },
    "envEnvConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique name of the environment"
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Environment variables"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Names of services (e.g., postgres, redis, app)"
        },
        "rawCompose": {
          "type": "string",
          "title": "Docker-compose text (optional)"
        }
      },
      "title": "Main entity: environment configuration"
    },
    "envEnvList": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/envEnvConfig"
          }
        }
      },
      "title": "List of all environments"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
